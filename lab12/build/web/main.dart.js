// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const tab_controller = flutter_sdk.src__material__tab_controller;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const tabs = flutter_sdk.src__material__tabs;
  const recognizer = flutter_sdk.src__gestures__recognizer;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const icon = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const binding = flutter_sdk.src__widgets__binding;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const text_style = flutter_sdk.src__painting__text_style;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const colors$ = flutter_sdk.src__painting__colors;
  const alignment = flutter_sdk.src__painting__alignment;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var home_page = Object.create(dart.library);
  var settings_page = Object.create(dart.library);
  var async_methods = Object.create(dart.library);
  var $toString = dartx.toString;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.MainPage.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Кофемашина"
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [_Enum__name]: "start",
        [_Enum_index]: 1
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57720
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[10] || CT.C10
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: tabs.Tab.prototype,
        [Widget_key]: null,
        [Tab_height]: null,
        [Tab_iconMargin]: C[8] || CT.C8,
        [Tab_icon]: C[9] || CT.C9,
        [Tab_child]: null,
        [Tab_text]: "Главная"
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58751
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[13] || CT.C13
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: tabs.Tab.prototype,
        [Widget_key]: null,
        [Tab_height]: null,
        [Tab_iconMargin]: C[8] || CT.C8,
        [Tab_icon]: C[12] || CT.C12,
        [Tab_child]: null,
        [Tab_text]: "Настройки"
      });
    },
    get C6() {
      return C[6] = dart.constList([C[7] || CT.C7, C[11] || CT.C11], framework.Widget);
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: tabs.TabBar.prototype,
        [Widget_key]: null,
        [TabBar_splashBorderRadius]: null,
        [TabBar_splashFactory]: null,
        [TabBar_physics]: null,
        [TabBar_onTap]: null,
        [TabBar_enableFeedback]: null,
        [TabBar_mouseCursor]: null,
        [TabBar_dragStartBehavior]: C[4] || CT.C4,
        [TabBar_overlayColor]: null,
        [TabBar_unselectedLabelStyle]: null,
        [TabBar_labelPadding]: null,
        [TabBar_labelStyle]: null,
        [TabBar_unselectedLabelColor]: null,
        [TabBar_labelColor]: null,
        [TabBar_dividerColor]: null,
        [TabBar_indicatorSize]: null,
        [TabBar_automaticIndicatorColorAdjustment]: true,
        [TabBar_indicator]: null,
        [TabBar_indicatorPadding]: C[5] || CT.C5,
        [TabBar_indicatorWeight]: 2,
        [TabBar_indicatorColor]: null,
        [TabBar_padding]: null,
        [TabBar_isScrollable]: false,
        [TabBar_controller]: null,
        [TabBar_tabs]: C[6] || CT.C6
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Clip.prototype,
        [_Enum__name]: "hardEdge",
        [_Enum_index]: 1
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: home_page.CoffeeHomePage.prototype,
        [Widget_key]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: settings_page.SettingsPage.prototype,
        [Widget_key]: null
      });
    },
    get C16() {
      return C[16] = dart.constList([C[17] || CT.C17, C[18] || CT.C18], framework.Widget);
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: tabs.TabBarView.prototype,
        [Widget_key]: null,
        [TabBarView_clipBehavior]: C[15] || CT.C15,
        [TabBarView_viewportFraction]: 1,
        [TabBarView_dragStartBehavior]: C[4] || CT.C4,
        [TabBarView_physics]: null,
        [TabBarView_children]: C[16] || CT.C16,
        [TabBarView_controller]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[23] || CT.C23,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[22] || CT.C22,
        [Text_textSpan]: null,
        [Text_data]: "Выберите кофе:"
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Приготовить кофе"
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 20,
        [SizedBox_width]: null
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293457385
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291356361
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289058471
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4286695300
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284922730
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283215696
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282622023
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281896508
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281236786
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279983648
      });
    },
    get C29() {
      return C[29] = dart.constMap(core.int, ui.Color, [50, C[30] || CT.C30, 100, C[31] || CT.C31, 200, C[32] || CT.C32, 300, C[33] || CT.C33, 400, C[34] || CT.C34, 500, C[35] || CT.C35, 600, C[36] || CT.C36, 700, C[37] || CT.C37, 800, C[38] || CT.C38, 900, C[39] || CT.C39]);
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4283215696,
        [ColorSwatch__swatch]: C[29] || CT.C29
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[28] || CT.C28,
        [TextStyle_inherit]: true
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Страница настроек"
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[41] || CT.C41,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[42] || CT.C42
      });
    }
  }, false);
  var C = Array(43).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/project/lib/pages/home_page.dart",
    "file:///zapp/project/lib/pages/settings_page.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Кофемашина", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.brown}), home: C[1] || CT.C1, debugShowCheckedModeBanner: false});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var TabBar_splashBorderRadius = dart.privateName(tabs, "TabBar.splashBorderRadius");
  var TabBar_splashFactory = dart.privateName(tabs, "TabBar.splashFactory");
  var TabBar_physics = dart.privateName(tabs, "TabBar.physics");
  var TabBar_onTap = dart.privateName(tabs, "TabBar.onTap");
  var TabBar_enableFeedback = dart.privateName(tabs, "TabBar.enableFeedback");
  var TabBar_mouseCursor = dart.privateName(tabs, "TabBar.mouseCursor");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var TabBar_dragStartBehavior = dart.privateName(tabs, "TabBar.dragStartBehavior");
  var TabBar_overlayColor = dart.privateName(tabs, "TabBar.overlayColor");
  var TabBar_unselectedLabelStyle = dart.privateName(tabs, "TabBar.unselectedLabelStyle");
  var TabBar_labelPadding = dart.privateName(tabs, "TabBar.labelPadding");
  var TabBar_labelStyle = dart.privateName(tabs, "TabBar.labelStyle");
  var TabBar_unselectedLabelColor = dart.privateName(tabs, "TabBar.unselectedLabelColor");
  var TabBar_labelColor = dart.privateName(tabs, "TabBar.labelColor");
  var TabBar_dividerColor = dart.privateName(tabs, "TabBar.dividerColor");
  var TabBar_indicatorSize = dart.privateName(tabs, "TabBar.indicatorSize");
  var TabBar_automaticIndicatorColorAdjustment = dart.privateName(tabs, "TabBar.automaticIndicatorColorAdjustment");
  var TabBar_indicator = dart.privateName(tabs, "TabBar.indicator");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var TabBar_indicatorPadding = dart.privateName(tabs, "TabBar.indicatorPadding");
  var TabBar_indicatorWeight = dart.privateName(tabs, "TabBar.indicatorWeight");
  var TabBar_indicatorColor = dart.privateName(tabs, "TabBar.indicatorColor");
  var TabBar_padding = dart.privateName(tabs, "TabBar.padding");
  var TabBar_isScrollable = dart.privateName(tabs, "TabBar.isScrollable");
  var TabBar_controller = dart.privateName(tabs, "TabBar.controller");
  var Tab_height = dart.privateName(tabs, "Tab.height");
  var Tab_iconMargin = dart.privateName(tabs, "Tab.iconMargin");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  var Tab_icon = dart.privateName(tabs, "Tab.icon");
  var Tab_child = dart.privateName(tabs, "Tab.child");
  var Tab_text = dart.privateName(tabs, "Tab.text");
  var TabBar_tabs = dart.privateName(tabs, "TabBar.tabs");
  var TabBarView_clipBehavior = dart.privateName(tabs, "TabBarView.clipBehavior");
  var TabBarView_viewportFraction = dart.privateName(tabs, "TabBarView.viewportFraction");
  var TabBarView_dragStartBehavior = dart.privateName(tabs, "TabBarView.dragStartBehavior");
  var TabBarView_physics = dart.privateName(tabs, "TabBarView.physics");
  var TabBarView_children = dart.privateName(tabs, "TabBarView.children");
  var TabBarView_controller = dart.privateName(tabs, "TabBarView.controller");
  main.MainPage = class MainPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MainPage.new({key: key});
    }
    build(context) {
      return new tab_controller.DefaultTabController.new({length: 2, child: new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[2] || CT.C2, bottom: C[3] || CT.C3}), body: C[14] || CT.C14})});
    }
  };
  (main.MainPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MainPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MainPage.prototype;
  dart.addTypeTests(main.MainPage);
  dart.addTypeCaches(main.MainPage);
  dart.setMethodSignature(main.MainPage, () => ({
    __proto__: dart.getMethods(main.MainPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MainPage, I[0]);
  main.main = function main$0() {
    return binding.runApp(C[19] || CT.C19);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  home_page.CoffeeHomePage = class CoffeeHomePage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new home_page.CoffeeHomePage.new({key: key});
    }
    createState() {
      return new home_page._CoffeeHomePageState.new();
    }
  };
  (home_page.CoffeeHomePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    home_page.CoffeeHomePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = home_page.CoffeeHomePage.prototype;
  dart.addTypeTests(home_page.CoffeeHomePage);
  dart.addTypeCaches(home_page.CoffeeHomePage);
  dart.setMethodSignature(home_page.CoffeeHomePage, () => ({
    __proto__: dart.getMethods(home_page.CoffeeHomePage.__proto__),
    createState: dart.fnType(framework.State$(home_page.CoffeeHomePage), [])
  }));
  dart.setLibraryUri(home_page.CoffeeHomePage, I[1]);
  var _makeCoffee = dart.privateName(home_page, "_makeCoffee");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var Color_value = dart.privateName(ui, "Color.value");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  home_page._CoffeeHomePageState = class _CoffeeHomePageState extends framework.State$(home_page.CoffeeHomePage) {
    [_makeCoffee]() {
      return async.async(dart.void, (function* _makeCoffee() {
        this.setState(dart.fn(() => {
          this.status = "Нагреваю воду...";
        }, T.VoidTovoid()));
        yield async_methods.heatWater();
        this.setState(dart.fn(() => {
          this.status = "Завариваю кофе...";
        }, T.VoidTovoid()));
        yield async_methods.brewCoffee();
        this.setState(dart.fn(() => {
          this.status = "Взбиваю молоко...";
        }, T.VoidTovoid()));
        yield async_methods.frothMilk();
        this.setState(dart.fn(() => {
          this.status = "Смешиваю кофе с молоком...";
        }, T.VoidTovoid()));
        yield async_methods.mixCoffeeAndMilk();
        this.setState(dart.fn(() => {
          this.status = "Кофе готово!";
        }, T.VoidTovoid()));
      }).bind(this));
    }
    build(context) {
      return new basic.Padding.new({padding: C[20] || CT.C20, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[21] || CT.C21, C[24] || CT.C24, new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _makeCoffee), child: C[25] || CT.C25}), C[26] || CT.C26, new text.Text.new(this.status, {style: C[27] || CT.C27})])})});
    }
    static ['_#new#tearOff']() {
      return new home_page._CoffeeHomePageState.new();
    }
  };
  (home_page._CoffeeHomePageState.new = function() {
    this.status = "Готов к приготовлению";
    home_page._CoffeeHomePageState.__proto__.new.call(this);
    ;
  }).prototype = home_page._CoffeeHomePageState.prototype;
  dart.addTypeTests(home_page._CoffeeHomePageState);
  dart.addTypeCaches(home_page._CoffeeHomePageState);
  dart.setMethodSignature(home_page._CoffeeHomePageState, () => ({
    __proto__: dart.getMethods(home_page._CoffeeHomePageState.__proto__),
    [_makeCoffee]: dart.fnType(async.Future$(dart.void), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(home_page._CoffeeHomePageState, I[1]);
  dart.setFieldSignature(home_page._CoffeeHomePageState, () => ({
    __proto__: dart.getFields(home_page._CoffeeHomePageState.__proto__),
    status: dart.fieldType(core.String)
  }));
  var Align_heightFactor = dart.privateName(basic, "Align.heightFactor");
  var Align_widthFactor = dart.privateName(basic, "Align.widthFactor");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var Align_alignment = dart.privateName(basic, "Align.alignment");
  settings_page.SettingsPage = class SettingsPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new settings_page.SettingsPage.new({key: key});
    }
    build(context) {
      return C[40] || CT.C40;
    }
  };
  (settings_page.SettingsPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    settings_page.SettingsPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = settings_page.SettingsPage.prototype;
  dart.addTypeTests(settings_page.SettingsPage);
  dart.addTypeCaches(settings_page.SettingsPage);
  dart.setMethodSignature(settings_page.SettingsPage, () => ({
    __proto__: dart.getMethods(settings_page.SettingsPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(settings_page.SettingsPage, I[2]);
  async_methods.heatWater = function heatWater() {
    return async.async(dart.void, function* heatWater() {
      core.print("Нагрев воды...");
      yield async.Future.delayed(new core.Duration.new({seconds: 3}));
      core.print("Вода нагрета.");
    });
  };
  async_methods.brewCoffee = function brewCoffee() {
    return async.async(dart.void, function* brewCoffee() {
      core.print("Завариваем кофе...");
      yield async.Future.delayed(new core.Duration.new({seconds: 5}));
      core.print("Кофе заварен.");
    });
  };
  async_methods.frothMilk = function frothMilk() {
    return async.async(dart.void, function* frothMilk() {
      core.print("Взбиваем молоко...");
      yield async.Future.delayed(new core.Duration.new({seconds: 5}));
      core.print("Молоко взбито.");
    });
  };
  async_methods.mixCoffeeAndMilk = function mixCoffeeAndMilk() {
    return async.async(dart.void, function* mixCoffeeAndMilk() {
      core.print("Смешиваем кофе и молоко...");
      yield async.Future.delayed(new core.Duration.new({seconds: 3}));
      core.print("Кофе с молоком готов.");
    });
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "file:///zapp/project/lib/pages/home_page.dart": home_page,
    "file:///zapp/project/lib/pages/settings_page.dart": settings_page,
    "file:///zapp/project/lib/async_methods.dart": async_methods
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/pages/home_page.dart","/zapp/project/lib/pages/settings_page.dart","/zapp/project/lib/async_methods.dart"],"names":[],"mappingsiCAAgB;AACd,UAAoB,6BAGD;AAF8B,QAA9B,AAAkB,6BAElB,eAF2B;;AAEL,QAAF,CAApB;;AAEnB,UAAO,AAAQ,uBAAY;AAKvB,QAJK,AAAqC,qBAA7B,qCAAuB,uBAAW,QAAC;AAG9C,UAFC,AAAQ,sBAAW,2BAA2B,CAC/C;;;wBAIL,SAAC,GAAG;AACL,UAAO,AAAQ,uBAAY;AAIvB,QAHC,AAAQ,sBAAW,wBAAwB,CAC5C,AAAE,CAAD,eACD,AAAW,UAAD;;2DAGM,yCACb,SAAC,MAAM,QAAQ,MAAM;AAC1B,cAAO,AAAQ,uBAAY;AAC4B,YAAlD,AAAQ,sBAAW,wBAAwB,CAAC,IAAI;;;EAI3D;;AAEiB;AAQd,MAPD,MAAS,gCACC;AACS,UAAf;6CAEe;AACmB,UAAjB;;IAGvB;;;;;;;;UC7C4B;AACxB,YAAO,iCACE,qBACA,yCAAgC,wEAEX;IAEhC;;;QAVmB;AAAb,8CAAa,GAAG;;EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAiBE;AACxB,YAAO,sDACG,UACD,mCACG;IAiBd;;;QAxBsB;AAAhB,iDAAgB,GAAG;;EAAE;;;;;;;;;AAjBd;EAAqB;;ECGZ;;;;;;;ACAiB;IAAsB;;;QAHjC;AAAtB,4DAAsB,GAAG;;EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUT;AAGpB,QAFF,cAAS;AACoB,UAA3B,cAAS;;AAEM,QAAjB,MAAM;AAIJ,QAFF,cAAS;AACqB,UAA5B,cAAS;;AAEO,QAAlB,MAAM;AAIJ,QAFF,cAAS;AACqB,UAA5B,cAAS;;AAEM,QAAjB,MAAM;AAIJ,QAFF,cAAS;AAC8B,UAArC,cAAS;;AAEa,QAAxB,MAAM;AAIJ,QAFF,cAAS;AACgB,UAAvB,cAAS;;MAEb;;UAG0B;AACxB,YAAO,yDAEE,0CACkC,yCAC7B,0DAMR,6DACa,+DAIb,kBACE;IAMV;;;;;;IArDO,cAAS;;;EAsDlB;;;;;;;;;;;;;;;;;;;;;;;UC3D4B;AACxB;IACF;;;QAL0B;AAApB,8DAAoB,GAAG;;EAAE;;;;;;;;;ACDX;AACG,MAAvB,WAAM;AACoC,MAA1C,MAAa,qBAAQ,gCAAkB;AACjB,MAAtB,WAAM;IACR;;;AAEuB;AACM,MAA3B,WAAM;AACoC,MAA1C,MAAa,qBAAQ,gCAAkB;AACjB,MAAtB,WAAM;IACR;;;AAEsB;AACO,MAA3B,WAAM;AACoC,MAA1C,MAAa,qBAAQ,gCAAkB;AAChB,MAAvB,WAAM;IACR;;;AAE6B;AACQ,MAAnC,WAAM;AACoC,MAA1C,MAAa,qBAAQ,gCAAkB;AACT,MAA9B,WAAM;IACR","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    zapp__project__lib__pages__home_page: home_page,
    zapp__project__lib__pages__settings_page: settings_page,
    zapp__project__lib__async_methods: async_methods
  };
}));

//# sourceMappingURL=main.js.map
